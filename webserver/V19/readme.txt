解决传递中文问题

当我们使用GET请求提交中文数据时,数据会被包含在URL的抽象路径部分.抽象路径会被
包含在请求的请求行中.
HTTP协议要求请求的请求行和消息头都是文本,且使用的字符集必须是ISO8859-1
这个字符集不支持中文.导致中文不能直接传递.

浏览器解决办法:
思路:将中文使用ISO8859-1支持的字符表示,例如用英文,数字符号等表示,然后传递给
服务端,服务端在转换回来即可.

实现:
首先将中文使用当前页面支持的字符集,通常就是UTF-8转换为2进制.
页面上<meta charset="UTF-8">决定的.

例如:
"范"--- UTF-8 ---> 二进制(11101000.......)
UTF-8编码中每个中文三个字节

提交中文:"范传奇"
原始的抽象路径如:/myweb/reg?username=范传奇&password=.....
URL不允许直接包含中文(HTTP协议要求的)
改为:/myweb/reg?username=11101000.......(72位)&password=.....

解决了问题,但是带来新的问题是长度过大了.
数据越多传送越慢.

解决长度问题,改用16进制表示(0-9A-F仍然是ISO8859-1支持的字符)
对比:
二进制     十进制     十六进制
0000        0           0
0001        1           1
0010        2           2
0011        3           3
0100        4           4
0101        5           5
0110        6           6
0111        7           7
1000        8           8
1001        9           9
1010        10          A
1011        11          B
1100        12          C
1101        13          D
1110        14          E
1111        15          F


1字节的8位2进制就可以用2位16进制表示了
例如:
11101000
E8

传递数据时:/myweb/reg?username=11101000.......(72位)&password=.....
就可以改为:
/myweb/reg?username=E8.......(18位)&password=.....


带来的问题:我们用英文和数字的组合表示16进制的字节内容,如何与实际的英文数字
区分开?
"范"---UTF-8---16进制--->E88C83
/myweb/reg?username=E88C83&password=.....
若有一个人名字就叫"E88C83"怎么办?
/myweb/reg?username=E88C83&password=.....

为了解决这个问题URL格式上要求若使用英文数字组合表示16进制时,那么每两位16进制前
必须加一个"%"
意思是:
/myweb/reg?username=%E8%8C%83&password=.....
那么%E8%8C%83就是3字节的16进制

/myweb/reg?username=E88C83&password=.....
那么E88C83就是原始的英文和数字


%E8%8C%83
11101000 10001100 10000011
E8       8C       83